trigger:
  branches:
    include:
      - main

pool:
  name: Agent_Pool

steps:
  # Étape 1 : Télécharger et configurer Maven pour Windows
  - script: |
      echo "Téléchargement et installation de Maven..."
      curl -L -o apache-maven-3.8.4-bin.zip https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.8.4/apache-maven-3.8.4-bin.zip
      if ($?) {
        powershell -Command "Expand-Archive -Path apache-maven-3.8.4-bin.zip -DestinationPath C:\maven"
        setx PATH "%PATH%;C:\maven\apache-maven-3.8.4\bin"
        echo "Maven installé avec succès"
      } else {
        echo "Erreur : le téléchargement de Maven a échoué."
        exit 1
      }
    displayName: 'Installer Maven sur l’agent'

  # Étape 2 : Installer Java manuellement en téléchargeant l'archive ZIP
  - script: |
      echo "Téléchargement et installation de Java..."
      curl -L -o openjdk-11.zip https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_windows-x64_bin.zip
      powershell -Command "Expand-Archive -Path openjdk-11.zip -DestinationPath C:\openjdk-11"
      setx JAVA_HOME "C:\openjdk-11"
      setx PATH "%JAVA_HOME%\bin;%PATH%"
      echo "Java installé avec succès"
    displayName: 'Installer Java 11 sur l’agent'

  # Étape 3 : Compiler et packager avec Maven via un script personnalisé
  - script: |
      echo "Compilation du projet avec Maven..."
      C:\maven\apache-maven-3.8.4\bin\mvn -f pom.xml clean package -B
    displayName: 'Compiler et packager avec Maven'

  # Étape 4 : Publier l'artefact compilé
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)\target'
      artifactName: 'java-app'
    displayName: 'Publier l’artefact pour le déploiement'
